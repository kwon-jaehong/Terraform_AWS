apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  name: stack
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: kube-prometheus-stack
    helm:
      values: |-
        defaultRules:
          rules:
            etcd: false
            kubeScheduler: false
        kubeControllerManager:
          enabled: false
        kubeEtcd:
          enabled: false
        kubeScheduler:
          enabled: false
        grafana:
          adminPassword: test123
          service:
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
              service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
            type: LoadBalancer
          extraExposePorts:
            - name: https
              port: 443
              targetPort: 3000
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          persistence:
            type: pvc
            enabled: true
            storageClassName: gp2
            accessModes:
              - ReadWriteOnce
            size: 20Gi
        prometheus:
          prometheusSpec:
            retention: 31d
            retentionSize: "20GB"
            resources:
              limits:
                cpu: 500m
                memory: 512Mi
              requests:
                cpu: 200m
                memory: 256Mi
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: gp2
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 30Gi
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 19.3.0
  syncPolicy:
    syncOptions:
    - ServerSideApply=true
    - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  name: prometheus-adapter
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: prometheus-adapter
    helm:
      values: |-
        prometheus:
          url: http://stack-kube-prometheus-stac-prometheus.monitoring.svc
        rules:
          resource:
            cpu:
              containerQuery: |
                sum by (<<.GroupBy>>) (
                  rate(container_cpu_usage_seconds_total{container!="",<<.LabelMatchers>>}[3m])
                )
              nodeQuery: |
                sum  by (<<.GroupBy>>) (
                  rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal",<<.LabelMatchers>>}[3m])
                )
              resources:
                overrides:
                  node:
                    resource: node
                  namespace:
                    resource: namespace
                  pod:
                    resource: pod
              containerLabel: container
            memory:
              containerQuery: |
                sum by (<<.GroupBy>>) (
                  avg_over_time(container_memory_working_set_bytes{container!="",<<.LabelMatchers>>}[3m])
                )
              nodeQuery: |
                sum by (<<.GroupBy>>) (
                  avg_over_time(node_memory_MemTotal_bytes{<<.LabelMatchers>>}[3m])
                  -
                  avg_over_time(node_memory_MemAvailable_bytes{<<.LabelMatchers>>}[3m])
                )
              resources:
                overrides:
                  node:
                    resource: node
                  namespace:
                    resource: namespace
                  pod:
                    resource: pod
              containerLabel: container
            window: 3m
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 2.13.0
  syncPolicy:
    syncOptions:
    - ServerSideApply=true
    - CreateNamespace=true