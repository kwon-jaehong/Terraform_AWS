apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-commander
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-commander
  template:
    metadata:
      labels:
        app: redis-commander
    spec:
      automountServiceAccountToken: false
      containers:
        - name: redis-commander
          image: rediscommander/redis-commander
          env:
            - name: REDIS_HOST
              value: "redis-master"
            - name: REDIS_PASSWORD
              value: "password" #echo $REDIS_PASSWORD - name: K8S_SIGTERM value: "1" ports: - name: redis-commander containerPort: 8081 livenessProbe: httpGet: path: /favicon.png port: 8081 initialDelaySeconds: 10 timeoutSeconds: 5 resources: limits: cpu: "500m" memory: "512M" securityContext: runAsNonRoot: true readOnlyRootFilesystem: false allowPrivilegeEscalation: false capabilities: drop: - ALL --- apiVersion: v1 kind: Service metadata: name: redis-commander spec: ports: - port: 8081 targetPort: 8081 name: redis-commander protocol: TCP selector: app: redis-commander type: LoadBalancer loadBalancerIP: "ExternalIP" externalIPs: - externalIP
---
kind: Service
apiVersion: v1
metadata:
  name: redis-commander
spec:
  selector:
    app: redis-commander
  ports:
  - name: web
    port: 8081
  type: LoadBalancer