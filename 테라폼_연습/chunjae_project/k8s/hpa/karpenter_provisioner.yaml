apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: karpenter
spec:
  ttlSecondsAfterEmpty: 300 # 아무런 워커노드 없을때 6분까지 대기하다가 삭제 
  ttlSecondsUntilExpired: 18000 #노드 5시간뒤 삭제
  limits:
    resources:
      # cpu: 1000 # limit to 100 CPU cores
      aws.amazon.com/neuron: 80
  requirements:
    - key: "karpenter.sh/capacity-type" # If not included, the webhook for the AWS cloud provider will default to on-demand
      operator: In
      # values: ["spot","on-demand"]
      # values: ["on-demand"]
      values: ["spot"]
    - key: karpenter.k8s.aws/instance-family
      operator: In
      values: [inf1]
    - key: karpenter.k8s.aws/instance-size
      operator: In
      values: [xlarge] # x라지, 2x라지만 사용
      # values: [xlarge, 2xlarge] # x라지, 2x라지만 사용
  providerRef:
    name: my-provider
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: my-provider
spec:
  subnetSelector:
    kubernetes.io/cluster/chunjae_ocr: owned
  ## 새로 생성한 노드의 보안 그룹 설정
  # https://karpenter.sh/preview/concepts/node-templates/
  securityGroupSelector:
    # kubernetes.io/cluster/chunjae_ocr: owned
    Name: "eks-*"
    # aws-ids: "sg-063d7acfb4b06c82c,sg-06e0cf9c198874591"

    #  aws_eks_cluster.example_cluster.vpc_config.0.vpc_security_group_ids[0]
    #테라폼에서 이렇게 가져와야하고, 이거 yaml으로 제대로 해야될듯.
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 40Gi
        volumeType: gp2
