---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: application
spec:
  replicas: 1
  selector:
    matchLabels:
      application: api-gateway
  template:
    metadata:
      labels:
        application: api-gateway
      annotations:
        sidecar.istio.io/interceptionMode: TPROXY
    spec:
      nodeSelector:
        eks.amazonaws.com/nodegroup: apigateway_node_group
      containers:
      - name: api-gateway
        image: 916657902198.dkr.ecr.us-east-2.amazonaws.com/api_gateway:57
        # command: ["/bin/sleep", "3650d"]
        command:
          - /bin/bash
          - -c
          - |
            service ntp restart &
            python3 app.py 
        resources:
          limits:
            cpu: 1800m
            memory: 2500Mi
          requests:
            cpu: 1000m
            # memory: 0.8Gi
            memory: 1000Mi
        env:
          - name: TZ
            value: Asia/Seoul
          - name: redis_host
            value: redis-master.messagesys.svc
          - name: rabbitmq_host
            value: production-rabbitmqcluster.messagesys.svc

---
kind: Service
apiVersion: v1
metadata:
  name: api-gateway
  namespace: application
  labels:
    application: api-gateway
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-eip-allocations: "eipalloc-0b5cf4d15494bb9cf,eipalloc-0d220274b39d629d1"
    ## cross zone load 옵션을 줘야 각 ip에 고루 분산됨
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  selector:
    application: api-gateway
  ports:
  - name: html
    port: 80
    targetPort: 80
