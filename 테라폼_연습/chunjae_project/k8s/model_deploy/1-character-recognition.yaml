apiVersion: apps/v1
kind: Deployment
metadata:
  name: character-recognition-neuroncore
  namespace: application
spec:
  replicas: 1
  selector:
    matchLabels:
      application: character-recognition
  template:
    metadata:
      labels:
        application: character-recognition
    spec:
      ## 포드 스케줄러 작동
      schedulerName: my-scheduler
      ## 어짜피 포드 스케줄러에서 뉴런코어를 담당다기 때문에 따로 노드를 셀렉트 안해줘도 된다
      nodeSelector:
        eks.amazonaws.com/nodegroup: inf_node_group
      containers:
      - name: character-recognition
        image: 916657902198.dkr.ecr.us-east-2.amazonaws.com/char_rec:26
        # command: ["/bin/sleep", "3650d"]
        command:
          - /bin/bash
          - -c
          - |
            ./env/bin/python main.py &
            source start.sh        
        resources:
          limits:
            cpu: 3500m
            memory: 10000Mi
            aws.amazon.com/neuron: 1
            # aws.amazon.com/neuroncore: 4
          # requests:
          #   cpu: 3000m
          #   memory: 2500Mi
        env:
          - name: NEURON_RT_VISIBLE_CORES
            value: 0,1,2,3
          - name: redis_host
            value: redis-master.messagesys.svc
          - name: rabbitmq_host
            value: production-rabbitmqcluster.messagesys.svc
        # livenessProbe:
        #   initialDelaySeconds: 0
        #   periodSeconds: 5
        #   successThreshold: 1
        #   failureThreshold: 1
        #   exec:
        #     command:
        #     - env/bin/python
        #     - check_neuroncore.py
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: character-recognition-neuron
#   namespace: application
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       application: character-recognition
#   template:
#     metadata:
#       labels:
#         application: character-recognition
#     spec:
#       ## 포드 스케줄러 작동
#       schedulerName: my-scheduler
#       affinity:
#         nodeAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution:
#             nodeSelectorTerms:
#             - matchExpressions:
#               - key: eks.amazonaws.com/nodegroup 
#                 operator: NotIn
#                 values:
#                 - inf_node_group
#       containers:
#       - name: character-recognition
#         image: 916657902198.dkr.ecr.us-east-2.amazonaws.com/char_rec:25
#         # command: ["/bin/sleep", "3650d"]
#         command:
#           - /bin/bash
#           - -c
#           - |
#             ./env/bin/python main.py &
#             source start.sh        
#         resources:
#           limits:
#             # cpu: 3000m
#             # memory: 2500Mi
#             aws.amazon.com/neuron: 1
#             # aws.amazon.com/neuroncore: 2
#           # requests:
#           #   cpu: 3000m
#           #   memory: 2500Mi
#         env:
#           - name: NEURON_RT_VISIBLE_CORES
#             value: 0,1,2,3
#           - name: redis_host
#             value: redis-master.messagesys.svc
#           - name: rabbitmq_host
#             value: production-rabbitmqcluster.messagesys.svc
---
kind: Service
apiVersion: v1
metadata:
  name: character-recognition
  namespace: application
  labels:
    application: character-recognition
spec:
  selector:
    application: character-recognition
  ports:
  - name: html
    port: 8081
  - name: metrix
    port: 9000
---

## 프로메테우스 메트릭 등록
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: character-recognition
  namespace: application
  labels:
    release: stack
spec:
  selector:
    matchLabels:
      application: character-recognition
  endpoints:
  - port: metrix